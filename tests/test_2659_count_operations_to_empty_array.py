from problem_list._2659_count_operations_to_empty_array import count_operations_to_empty_array

NUMBER_OF_TESTS = 4


def test(test_no: int = 1) -> bool:
    if test_no not in range(1, NUMBER_OF_TESTS + 1):
        raise ValueError("Test number not supported")
    if test_no == 1:
        nums = [3, 4, -1]
        expected = 5
    if test_no == 2:
        nums = [1, 2, 4, 3]
        expected = 5
    if test_no == 3:
        nums = [1, 2, 3]
        expected = 3
    if test_no == 4:
        nums = [632, 202, 956, -288, -243, 957, -660, 365, 591, -357, 579, 97, 531, 870, -171, -336, 466, 385, -241,
                600, -757, -272, 750, -737, 29, -958, 685, -910, 960, 936, -301, -765, -427, 873, 552, 402, 566, -710,
                38, -745, 348, -593, 839, 427, -325, 429, 226, 222, 710, 95, 550, 172, 3, 306, -387, -45, 443, -374,
                347, -503, 979, -761, 277, 356, 812, -750, -468, 520, -835, -203, 54, 193, -545, 256, 655, -483, 942,
                852, -975, 5, -92, 938, -329, -679, -127, -989, -521, 556, -191, 613, 732, -708, -685, 879, 303, -375,
                -181, -351, -140, 151, 799, 677, -986, 708, -386, -796, 633, 453, -166, 17, 843, 271, 18, -982, 65, 266,
                -114, 563, 507, 362, 387, -641, -345, 586, -485, -615, -773, 853, 724, 932, -922, 846, 643, -592, -857,
                -531, -118, -151, -596, 961, 366, -432, 646, -620, -321, -956, 949, 106, -953, 636, -756, -637, -200,
                -398, 833, -178, -85, 417, 876, 998, 198, 536, 9, -65, 31, 211, -973, 80, -499, -168, -537, 534, 561,
                -36, -887, 379, 163, 758, -311, -186, 403, 527, -219, 288, -258, 530, 342, 361, -141, -819, 908, 326,
                -372, 229, -152, 902, -269, 412, 517, 748, 809, -438, 867, 927, 11, -110, 562, -252, -751, -414, -770,
                575, 780, -26, -820, 460, 805, 35, 224, -82, 393, 742, -396, 448, 930, 390, 767, 244, 605, 487, -54,
                706, 933, -108, -937, -747, 139, 124, -230, 987, 672, -616, -51, -163, 280, -107, -853, -173, 827, -797,
                699, 48, -385, 304, 529, -359, -781, 804, -482, -27, -966, 569, 734, 33, 730, 344, 912, 117, -295, 903,
                610, -510, -783, -309, -675, 728, -517, -618, 811, 743, -888, -419, -883, -619, 997, 931, 592, 815,
                -862, 548, 411, -10, -30, -77, 53, 413, 737, -418, 524, -829, 386, -513, 328, 665, 374, -320, 628, -461,
                468, 34, 980, -932, 84, 952, -897, -512, 55, 389, 276, -323, -562, 729, 865, -684, -35, 233, -326, 206,
                283, 965, -871, -812, 439, -688, -32, -695, -332, -199, 14, -866, -952, 701, -753, 540, 225, 513, -743,
                426, 431, -486, -561, 622, -356, 849, -105, -942, -260, -247, 639, 486, 539, 968, 863, 113, 23, 797,
                -671, 775, -623, 81, -926, -740, -669, 380, -789, 868, 337, -113, -646, 673, -169, -744, 123, 338, -768,
                410, -856, 557, -776, 975, 179, -683, -474, 463, 772, -898, 659, -963, -81, 419, 404, 469, 776, -987,
                793, -371, 203, 46, 289, 19, -276, 418, -904, 946, -630, 483, 994, -383, -677, -224, 670, -22, 254,
                -867, -253, 83, -941, 285, 184, 593, -146, 128, -256, 309, -232, 682, 154, -540, 446, -738, 474, -769,
                -927, -536, -586, 300, 145, 943, 582, 848, 414, -319, -61, -522, -481, -346, -134, 629, 51, -546, -663,
                -784, 969, -53, -938, 269, 445, -595, -165, 335, 167, -100, -58, -103, -800, -172, -183, -576, 625, 88,
                -87, 687, -364, -944, 781, 810, 976, -130, -553, -441, 103, -227, -530, -390, -748, -549, -49, 310,
                -792, -283, -86, -668, 983, 791, 488, -811, 278, -79, 644, 136, -612, 30, -712, -425, -554, -843, -523,
                143, -889, 717, -198, -67, 394, -947, -208, -133, -362, -821, 27, 727, -236, -793, 102, 981, 753, 60,
                523, 910, 656, 627, 10, -48, 1000, 381, -689, -840, -274, -500, 958, -270, 423, -382, 945, -480, -404,
                -9, 711, -69, 492, -841, 638, -831, -216, -42, -132, 783, -445, 312, -591, 948, 545, -703, -381, 305,
                -999, 567, 697, 664, -174, -949, -380, -680, 502, 501, 766, -836, 671, 0, -126, 454, -25, -566, -962,
                773, -702, -148, -393, 142, 770, -885, -343, -240, 757, 678, -204, 368, -541, -139, -376, -714, -877,
                341, -551, -156, 265, -788, -249, 346, -572, -57, -428, 851, -607, -733, 367, -180, -472, 85, 436, 22,
                993, -980, -268, -112, -742, 70, 689, 7, -366, -627, 877, -271, -508, 493, -654, 164, 316, -158, 547,
                -407, -998, -466, 615, -571, 76, 962, 455, -832, -62, 281, -614, -392, -368, -813, -421, -13, -754, 331,
                -263, 700, 818, -583, -758, 840, -439, 228, -691, -193, 918, -960, -563, 749, -80, -859, -622, 262, 130,
                -690, -945, -331, -153, -880, 340, -436, 895, -928, 141, 177, -159, -694, -286, 442, 648, -492, -774,
                -384, 714, -367, -509, -400, 577, 684, -409, 257, -977, 738, 596, 64, -202, -102, 970, 855, 595, -145,
                -881, -28, 893, 2, -687]
        expected = 132015

    result = count_operations_to_empty_array(nums)
    return result == expected
